from __future__ import annotations

import pathlib
import typing
from typing import Self, Sequence, TypeAlias


# based on typeshed.stdlib.StrPath
# https://github.com/python/typeshed/blob/main/stdlib/_typeshed/__init__.pyi#L173
_StrPath: TypeAlias = 'str | _StrPathLike'


# based on typeshed.stdlib.os.PathLike
# https://github.com/python/typeshed/blob/main/stdlib/os/__init__.pyi#L877
class _StrPathLike(typing.Protocol):
    def __fspath__(self) -> str: ...


# based on typeshed.stdlib.pathlib.PurePath
# https://github.com/python/typeshed/blob/main/stdlib/pathlib.pyi#L29
class _PurePathProtocol(typing.Protocol):
    @property
    def parts(self) -> tuple[str, ...]: ...
    @property
    def drive(self) -> str: ...
    @property
    def root(self) -> str: ...
    @property
    def anchor(self) -> str: ...
    @property
    def name(self) -> str: ...
    @property
    def suffix(self) -> str: ...
    @property
    def suffixes(self) -> list[str]: ...
    @property
    def stem(self) -> str: ...
    def __new__(cls, *args: _StrPath) -> Self: ...
    def __hash__(self) -> int: ...
    def __fspath__(self) -> str: ...
    def __truediv__(self, key: _StrPath) -> Self: ...
    def __rtruediv__(self, key: _StrPath) -> Self: ...
    def __bytes__(self) -> bytes: ...
    def as_posix(self) -> str: ...
    def as_uri(self) -> str: ...
    def is_absolute(self) -> bool: ...
    def is_reserved(self) -> bool: ...
    def match(self, path_pattern: str) -> bool: ...
    def relative_to(self, *other: _StrPath) -> Self: ...
    def with_name(self, name: str) -> Self: ...
    def with_suffix(self, suffix: str) -> Self: ...
    def joinpath(self, *other: _StrPath) -> Self: ...
    @property
    def parents(self) -> Sequence[Self]: ...
    @property
    def parent(self) -> Self: ...


class Protocol(_PurePathProtocol, typing.Protocol):
    ...


class ContainerPath(pathlib.PurePath):
    ...


def _type_check(  # pyright: ignore[reportUnusedFunction]
    _container_path: ContainerPath, _path: pathlib.Path, _pure_path: pathlib.PurePath
) -> None:
    _p: _PurePathProtocol
    _p = _container_path
    _p = _path
    _p = _pure_path
    _pp = Protocol
    _pp = _container_path
    _pp = _path
    _pp = _pure_path
